{"version":3,"sources":["stores/TodoModel.js","stores/TodoStore.js","components/TodoEntry.js","components/TodoItem.js","components/TodoItems.js","components/TodoFooter.js","App.js","serviceWorker.js","index.js"],"names":["TodoModel","_class","_createClass","store","title","completed","id","_classCallCheck","this","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","key","value","updateTodo","_applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","action","Object","getOwnPropertyDescriptor","_this","todos","remove","saveTodos","todoStore","TodoStore","lastID","_descriptor5","_descriptor6","_descriptor7","push","filter","todo","length","storedTodos","localStorage","getItem","JSON","parse","map","data","_this2","setItem","stringify","_this3","i","destroy","_this4","_this5","todoIndex","findIndex","item","loadTodos","TodoEntry","_Component","_len","arguments","args","Array","_key","_callSuper","concat","state","handleChange","event","setState","target","handleKeyDown","preventDefault","addTodo","_inherits","React","createElement","className","onChange","onKeyDown","placeholder","autoFocus","Component","TodoItem","observer","_class2","props","class","onToggle","type","checked","onClick","handleDestroy","val","editText","trim","setTitle","viewStore","todoBeingEdited","toggle","TodoItems","filteredTodos","TodoFooter","clearCompleted","setFilter","getTodoCount","href","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.277e82aa.chunk.js","sourcesContent":["import { observable, action } from \"mobx\";\n\nexport default class TodoModel {\n  @observable title;\n  @observable completed;\n  @observable id;\n\n  constructor(store, title, completed, id) {\n    this.title = title;\n    this.completed = completed;\n    this.id = id;\n    this.store = store;\n  }\n\n  @action\n  toggle() {\n    this.completed = !this.completed;\n    this.store.updateTodo(this);\n  }\n\n  @action\n  destroy = () => {\n    this.store.todos.remove(this);\n    this.store.saveTodos();\n  };\n}\n","import { observable, action } from \"mobx\";\nimport TodoModel from \"./TodoModel\";\n\nclass TodoStore {\n  @observable todos = [];\n  lastID = 0;\n  @observable filter = \"All\";\n\n  @action\n  addTodo(title) {\n    this.todos.push(new TodoModel(this, title, false, this.lastID++));\n    this.saveTodos();\n  }\n\n  @action\n  getTodoCount() {\n    return this.todos.filter((todo) => !todo.completed).length;\n  }\n\n  @action\n  loadTodos = () => {\n    const storedTodos = localStorage.getItem(\"todos\");\n    if (storedTodos) {\n      this.todos = JSON.parse(storedTodos).map(\n        (data) => new TodoModel(this, data.title, data.completed, data.id)\n      );\n    }\n  };\n\n  @action\n  saveTodos = () => {\n    localStorage.setItem(\n      \"todos\",\n      JSON.stringify(\n        this.todos.map((todo) => ({\n          title: todo.title,\n          completed: todo.completed,\n          id: todo.id,\n        }))\n      )\n    );\n  };\n\n  @action\n  clearCompleted = () => {\n    for (let i = this.todos.length - 1; i >= 0; i--) {\n      if (this.todos[i].completed) {\n        this.todos[i].destroy();\n      }\n    }\n  };\n\n  @action\n  setFilter = (filter) => {\n    this.filter = filter;\n  };\n\n  @action\n  updateTodo = (todo) => {\n    const todoIndex = this.todos.findIndex((item) => item.id === todo.id);\n    if (todoIndex !== -1) {\n      this.todos[todoIndex] = todo;\n      this.saveTodos();\n    }\n  };\n}\n\nconst todoStore = new TodoStore();\ntodoStore.loadTodos();\nexport default todoStore;\n","import React, { Component } from \"react\";\nimport todoStore from \"../stores/TodoStore\";\n\nclass TodoEntry extends Component {\n  state = {\n    value: \"\",\n  };\n\n  handleChange = (event) => {\n    this.setState({ value: event.target.value });\n  };\n\n  handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      todoStore.addTodo(this.state.value);\n      this.setState({ value: \"\" });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <header className=\"header\">\n          <h1>todos</h1>\n          <input\n            value={this.state.value}\n            onChange={this.handleChange}\n            onKeyDown={this.handleKeyDown}\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            autoFocus\n          />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default TodoEntry;\n","import React, { Component } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { action } from \"mobx\";\n\n@observer\nclass TodoItem extends Component {\n  render() {\n    const { todo } = this.props;\n    return (\n      <div>\n        <li class={todo.completed ? \"completed\" : \" \"}>\n          <div class=\"view\">\n            <input\n              onChange={this.onToggle}\n              class=\"toggle\"\n              type=\"checkbox\"\n              checked={todo.completed}\n            />\n            <label>{todo.title}</label>\n            <button className=\"destroy\" onClick={this.handleDestroy} />{\" \"}\n          </div>\n          <input class=\"edit\" value=\"Create a TodoMVC template\" />\n        </li>\n      </div>\n    );\n  }\n\n  @action\n  handleSubmit = (event) => {\n    const val = this.editText.trim();\n    if (val) {\n      this.props.todo.setTitle(val);\n      this.editText = val;\n    } else {\n      this.handleDestroy();\n    }\n    this.props.viewStore.todoBeingEdited = null;\n  };\n\n  @action\n  onToggle = () => {\n    // console.log(this.props.todo);\n    this.props.todo.toggle();\n  };\n\n  @action\n  handleDestroy = () => {\n    this.props.todo.destroy();\n  };\n}\n\nexport default TodoItem;\n","import React, { Component } from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport todoStore from \"../stores/TodoStore\";\nimport { observer } from \"mobx-react\";\n\n@observer\nclass TodoItems extends Component {\n  render() {\n    const filteredTodos = todoStore.todos.filter(\n      (todo) =>\n        todoStore.filter === \"All\" ||\n        (todoStore.filter === \"Active\" && !todo.completed) ||\n        (todoStore.filter === \"Completed\" && todo.completed)\n    );\n\n    return (\n      <div>\n        <section class=\"main\">\n          <ul class=\"todo-list\">\n            {filteredTodos.map((todo) => (\n              <TodoItem key={todo.id} todo={todo} />\n            ))}\n          </ul>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default TodoItems;\n","import React, { Component } from \"react\";\nimport todoStore from \"../stores/TodoStore\";\n\nclass TodoFooter extends Component {\n  clearCompleted = () => {\n    todoStore.clearCompleted();\n  };\n\n  setFilter = (filter) => {\n    todoStore.setFilter(filter);\n  };\n\n  render() {\n    return (\n      <footer class=\"footer\">\n        <span class=\"todo-count\">\n          <strong>{todoStore.getTodoCount()}</strong> item left\n        </span>\n        <ul class=\"filters\">\n          <li>\n            <a class={todoStore.filter === \"All\" ? \"selected\" : \"\"} href=\"#/\" onClick={() => this.setFilter(\"All\")}>\n              All\n            </a>\n          </li>\n          <li>\n            <a class={todoStore.filter === \"Active\" ? \"selected\" : \"\"} href=\"#/active\" onClick={() => this.setFilter(\"Active\")}>\n              Active\n            </a>\n          </li>\n          <li>\n            <a class={todoStore.filter === \"Completed\" ? \"selected\" : \"\"} href=\"#/completed\" onClick={() => this.setFilter(\"Completed\")}>\n              Completed\n            </a>\n          </li>\n        </ul>\n        <button class=\"clear-completed\" onClick={this.clearCompleted}>\n          Clear completed\n        </button>\n      </footer>\n    );\n  }\n}\n\nexport default TodoFooter;\n","import React, { Component } from \"react\";\nimport { observer } from \"mobx-react\";\nimport \"./App.css\";\nimport TodoEntry from \"./components/TodoEntry\";\nimport TodoItems from \"./components/TodoItems\";\nimport TodoFooter from \"./components/TodoFooter\";\n@observer\nclass App extends Component {\n  render() {\n    return [\n      <div id=\"todoapp\" className=\"todoapp\">\n        <TodoEntry/>\n        <TodoItems/>\n        <TodoFooter/>\n      </div>,\n    ];\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}